#include <iostream>
using namespace std;

class SimpleQueue {
private:
    int queue[100];
    int front, rear;
    int size;
    
public:
    SimpleQueue() : front(-1), rear(-1), size(100) {}
    
    bool isEmpty() {
        return front == -1;
    }
    
    bool isFull() {
        return rear == size - 1;
    }
    
    void enqueue(int value) {
        if (isFull()) {
            cout << "Queue is full!" << endl;
            return;
        }
        if (isEmpty()) {
            front = 0;
        }
        rear++;
        queue[rear] = value;
        cout << "Enqueued: " << value << endl;
    }
    
    void dequeue() {
        if (isEmpty()) {
            cout << "Queue is empty!" << endl;
            return;
        }
        cout << "Dequeued: " << queue[front] << endl;
        if (front == rear) {
            front = rear = -1;
        } else {
            front++;
        }
    }
    
    void display() {
        if (isEmpty()) {
            cout << "Queue is empty!" << endl;
            return;
        }
        cout << "Queue: ";
        for (int i = front; i <= rear; i++) {
            cout << queue[i] << " ";
        }
        cout << endl;
    }
    
    void peek() {
        if (isEmpty()) {
            cout << "Queue is empty!" << endl;
        } else {
            cout << "Front element: " << queue[front] << endl;
        }
    }
    
    void menu() {
        int choice, value;
        while (true) {
            cout << "\nSimple Queue Operations:" << endl;
            cout << "1. Enqueue" << endl;
            cout << "2. Dequeue" << endl;
            cout << "3. Display" << endl;
            cout << "4. Peek" << endl;
            cout << "5. Check if empty" << endl;
            cout << "6. Check if full" << endl;
            cout << "7. Exit" << endl;
            cout << "Enter choice: ";
            cin >> choice;
            
            switch (choice) {
                case 1:
                    cout << "Enter value: ";
                    cin >> value;
                    enqueue(value);
                    break;
                case 2:
                    dequeue();
                    break;
                case 3:
                    display();
                    break;
                case 4:
                    peek();
                    break;
                case 5:
                    cout << (isEmpty() ? "Queue is empty" : "Queue is not empty") << endl;
                    break;
                case 6:
                    cout << (isFull() ? "Queue is full" : "Queue is not full") << endl;
                    break;
                case 7:
                    return;
                default:
                    cout << "Invalid choice!" << endl;
            }
        }
    }
};

int main() {
    SimpleQueue q;
    q.menu();
    return 0;
}
