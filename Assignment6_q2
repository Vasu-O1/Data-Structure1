#include <iostream>
using namespace std;

class CNode {
public:
    int data;
    CNode* next;
    
    CNode(int val) : data(val), next(nullptr) {}
};

class CircularLinkedList {
private:
    CNode* head;
    CNode nodes[10];
    int count;
    
public:
    CircularLinkedList() : head(nullptr), count(0) {}
    
    void insertAtEnd(int value) {
        if (count >= 10) return;
        
        nodes[count] = CNode(value);
        CNode* newNode = &nodes[count];
        
        if (head == nullptr) {
            head = newNode;
            newNode->next = head;
        } else {
            CNode* temp = head;
            while (temp->next != head) {
                temp = temp->next;
            }
            temp->next = newNode;
            newNode->next = head;
        }
        count++;
    }
    
    void displayWithHeadAtEnd() {
        if (head == nullptr) {
            cout << "List is empty" << endl;
            return;
        }
        
        CNode* temp = head;
        do {
            cout << temp->data << " ";
            temp = temp->next;
        } while (temp != head);
        cout << head->data << endl;
    }
};

int main() {
    CircularLinkedList list;
    
    // Create list: 20->100->40->80->60
    list.insertAtEnd(20);
    list.insertAtEnd(100);
    list.insertAtEnd(40);
    list.insertAtEnd(80);
    list.insertAtEnd(60);
    
    cout << "Output: ";
    list.displayWithHeadAtEnd();
    
    return 0;
}
