a)
#include <iostream>
using namespace std;
int main(){
    int n=3;
    int a[3][3]={{1,0,0},{0,2,0},{0,0,3}};
    int d[3]; // store only diagonal
    for(int i=0;i<n;i++){
        d[i]=a[i][i];
    }
    for(int i=0;i<n;i++) cout<<d[i]<<" ";
}

b)
#include <iostream>
using namespace std;
int main(){
    int n=4;
    int a[4][4]={{1,2,0,0},{3,4,5,0},{0,6,7,8},{0,0,9,10}};
    int t[10]; // 3n-2 = 10
    int k=0;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            if(i==j || i==j+1 || i==j-1){
                t[k++]=a[i][j];
            }
        }
    }
    for(int i=0;i<k;i++) cout<<t[i]<<" ";
}

c)#include <iostream>
using namespace std;
int main(){
    int n=3;
    int a[3][3]={{1,0,0},{2,3,0},{4,5,6}};
    int l[6]; // n(n+1)/2 = 6
    int k=0;
    for(int i=0;i<n;i++){
        for(int j=0;j<=i;j++){
            l[k++]=a[i][j];
        }
    }
    for(int i=0;i<k;i++) cout<<l[i]<<" ";
}

d)
#include <iostream>
using namespace std;
int main(){
    int n=3;
    int a[3][3]={{1,2,3},{0,4,5},{0,0,6}};
    int u[6]; // n(n+1)/2 = 6
    int k=0;
    for(int i=0;i<n;i++){
        for(int j=i;j<n;j++){
            u[k++]=a[i][j];
        }
    }
    for(int i=0;i<k;i++) cout<<u[i]<<" ";
}

e)
